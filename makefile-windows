CC := g++
CPPVERSION = -std=c++1y

PROJECT_BINDIR := bin
PROJECT_LIBDIR := lib
PROJECT_INCDIR := inc
PROJECT_CFLAGS := $(CPPVERSION) -g -pipe
PROJECT_LFLAGS := -pipe

# Engine
ENGINE_NAME := Engine
ENGINE_OBJDIR := obj/$(ENGINE_NAME)
ENGINE_SRCDIR := src/$(ENGINE_NAME)

ENGINE_CFLAGS := -Wall $(PROJECT_CFLAGS)
ENGINE_LFLAGS := -lglu32 -lopengl32 -lglfw3dll -lglew32 -lgdi32 -lFreeImage -shared -Wl,--out-implib=$(ENGINE_OBJDIR)/lib$(ENGINE_NAME).a -Wl,--export-all-symbols $(PROJECT_LFLAGS)

ENGINE_CPP := $(wildcard $(ENGINE_SRCDIR)/*.cpp)
ENGINE_OBJ := $(addprefix $(ENGINE_OBJDIR)/,$(notdir $(ENGINE_CPP:.cpp=.o)))
ENGINE_OUT := $(PROJECT_BINDIR)/$(ENGINE_NAME).dll

# Game
GAME_NAME := Game
GAME_OBJDIR := obj/$(GAME_NAME)
GAME_SRCDIR := src/$(GAME_NAME)

GAME_CFLAGS := -Wall $(PROJECT_CFLAGS)
GAME_LFLAGS := $(PROJECT_LFLAGS)
GAME_INCDIRS := $(ENGINE_SRCDIR)

GAME_CPP := $(wildcard $(GAME_SRCDIR)/*.cpp)
GAME_OBJ := $(addprefix $(GAME_OBJDIR)/,$(notdir $(GAME_CPP:.cpp=.o)))
GAME_OUT := $(PROJECT_BINDIR)/$(GAME_NAME).exe


all: Engine Game

Engine: $(ENGINE_OBJ)
	$(CC) $(ENGINE_OBJ) -o $(ENGINE_OUT) -L $(PROJECT_LIBDIR) $(ENGINE_LFLAGS)

$(ENGINE_OBJDIR)/%.o: $(ENGINE_SRCDIR)/%.cpp
	$(CC) -c $< -o $@ $(ENGINE_CFLAGS) -I $(PROJECT_INCDIR)

Game: $(GAME_OBJ)
	$(CC) $(GAME_OBJ) -o $(GAME_OUT) $(GAME_LFLAGS) -L $(ENGINE_OBJDIR) -l$(ENGINE_NAME)

$(GAME_OBJDIR)/%.o: $(GAME_SRCDIR)/%.cpp
	$(CC) -c $< -o $@ $(GAME_CFLAGS) -I $(GAME_INCDIRS) -I $(PROJECT_INCDIR)
